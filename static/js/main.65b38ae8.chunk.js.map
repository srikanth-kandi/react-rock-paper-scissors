{"version":3,"sources":["components/Buttons/styledComponents.js","components/Buttons/index.js","components/GameResultView/styledComponents.js","components/GameResultView/index.js","components/Game/styledComponents.js","components/Game/index.js","App.js","index.js"],"names":["ButtonLiContainer","styled","li","withConfig","displayName","componentId","ButtonImage","button","ImageItem","img","Buttons","props","buttonDetails","getButtonId","id","imageUrl","lowerCaseId","toLowerCase","_jsx","children","type","concat","onClick","src","alt","ShowResultContainer","div","ResultImagesContainer","ResultTextImgContainer","ResultText","p","ResultImageItem","ResultButtonContainer","PlayAgainButton","GameResultView","myChoice","opponentChoice","result","playAgain","_jsxs","BgContainer","MainContainer","ScoreContainer","ItemsContainer","Heading","ScoreCardContainer","ParagraphScore","ScoreSpan","ItemsImagesContainer","ul","PopUpContainer","PopUpButton","RulesImageContainer","RulesImage","CloseLineButton","CloseLineContainer","StyledPopup","Popup","resultConstants","Game","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","state","score","showResult","onClickPlayAgain","setState","onGetResult","_this$state","onGetButtonId","image","choicesList","randomNumber","Math","floor","random","prevState","onGetImages","map","eachItem","_createClass","key","value","_this$state2","this","modal","trigger","close","RiCloseLine","Component","App","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.65b38ae8.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const ButtonLiContainer = styled.li`\n  list-style: none;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  width: 50%;\n`\n\nexport const ButtonImage = styled.button`\n  background-color: transparent;\n  border: 0;\n  cursor: pointer;\n`\n\nexport const ImageItem = styled.img`\n  width: 120px;\n  height: 120px;\n\n  @media screen and (min-width: 768px) {\n    width: 150px;\n    height: 150px;\n  }\n`\n","import {ButtonLiContainer, ButtonImage, ImageItem} from './styledComponents'\n\nconst Buttons = props => {\n  const {buttonDetails, getButtonId} = props\n  const {id, imageUrl} = buttonDetails\n  const lowerCaseId = id.toLowerCase()\n\n  const onClickButton = () => {\n    getButtonId(id, imageUrl)\n  }\n\n  return (\n    <ButtonLiContainer>\n      <ButtonImage\n        type=\"button\"\n        data-testid={`${lowerCaseId}Button`}\n        onClick={onClickButton}\n      >\n        <ImageItem src={imageUrl} alt={id} />\n      </ButtonImage>\n    </ButtonLiContainer>\n  )\n}\n\nexport default Buttons\n","import styled from 'styled-components'\n\nexport const ShowResultContainer = styled.div`\n  width: 100%;\n`\n\nexport const ResultImagesContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n`\n\nexport const ResultTextImgContainer = styled.div``\n\nexport const ResultText = styled.p`\n  text-align: center;\n  font-weight: bold;\n  font-size: 20px;\n  font-family: 'Roboto';\n`\n\nexport const ResultImageItem = styled.img`\n  width: 120px;\n  height: 120px;\n\n  @media screen and (min-width: 768px) {\n    width: 150px;\n    height: 150px;\n  }\n`\n\nexport const ResultButtonContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n`\n\nexport const PlayAgainButton = styled.button`\n  border: 0;\n  background-color: #ffffff;\n  color: #223a5f;\n  font-family: 'Bree Serif';\n  font-size: 16px;\n  padding: 10px;\n  font-weight: bold;\n  border-radius: 10px;\n  cursor: pointer;\n`\n","import {\n  ShowResultContainer,\n  ResultImagesContainer,\n  ResultTextImgContainer,\n  ResultText,\n  ResultImageItem,\n  ResultButtonContainer,\n  PlayAgainButton,\n} from './styledComponents'\n\nconst GameResultView = props => {\n  const {myChoice, opponentChoice, result, playAgain} = props\n  const {imageUrl} = opponentChoice\n\n  const onClickPlayAgainButton = () => {\n    playAgain()\n  }\n\n  return (\n    <ShowResultContainer>\n      <ResultImagesContainer>\n        <ResultTextImgContainer>\n          <ResultText>YOU</ResultText>\n          <ResultImageItem src={myChoice[1]} alt=\"your choice\" />\n        </ResultTextImgContainer>\n        <ResultTextImgContainer>\n          <ResultText>OPPONENT</ResultText>\n          <ResultImageItem src={imageUrl} alt=\"opponent choice\" />\n        </ResultTextImgContainer>\n      </ResultImagesContainer>\n      <ResultText>{result}</ResultText>\n      <ResultButtonContainer>\n        <PlayAgainButton type=\"button\" onClick={onClickPlayAgainButton}>\n          Play Again\n        </PlayAgainButton>\n      </ResultButtonContainer>\n    </ShowResultContainer>\n  )\n}\n\nexport default GameResultView\n","import styled from 'styled-components'\nimport Popup from 'reactjs-popup'\nimport 'reactjs-popup/dist/index.css'\n\nexport const BgContainer = styled.div`\n  background-color: #223a5f;\n  height: 100dvh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-around;\n`\n\nexport const MainContainer = styled.div`\n  width: 90%;\n  color: #ffffff;\n  height: 95dvh;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  @media screen and (min-width: 768px) {\n    width: 60%;\n    justify-content: space-around;\n  }\n`\n\nexport const ScoreContainer = styled.div`\n  padding: 0px 10px;\n  border: 2px solid #ffffff;\n  border-radius: 10px;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`\n\nexport const ItemsContainer = styled.div`\n  margin-left: 10px;\n`\n\nexport const Heading = styled.p`\n  font-family: 'Bree Serif';\n  font-size: 20px;\n`\n\nexport const ScoreCardContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-around;\n  margin: 15px;\n  margin-right: 5px;\n  background-color: #ffffff;\n  border-radius: 10px;\n  width: 100px;\n  padding: 5px;\n`\n\nexport const ParagraphScore = styled.p`\n  font-family: 'Bree Serif';\n  color: #223a5f;\n  font-weight: bold;\n  font-size: 25px;\n  text-align: center;\n  margin: 0;\n`\n\nexport const ScoreSpan = styled.p`\n  color: #223a5f;\n  text-align: center;\n  font-weight: bold;\n  font-size: 30px;\n  font-family: 'Roboto';\n  margin: 0;\n`\n\nexport const ItemsImagesContainer = styled.ul`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  padding: 0;\n  width: 100%;\n  height: 50%;\n`\n\nexport const PlayAgainButton = styled.button`\n  border: 0;\n  background-color: #ffffff;\n  color: #223a5f;\n  font-family: 'Roboto';\n  font-size: 15px;\n  padding: 10px;\n  font-weight: bold;\n  border-radius: 10px;\n  cursor: pointer;\n`\n\nexport const PopUpContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n`\n\nexport const PopUpButton = styled(PlayAgainButton)`\n  width: 100px;\n  font-family: 'Bree Serif';\n  color: #223a5f;\n  font-size: 18px;\n`\n\nexport const RulesImageContainer = styled.div``\n\nexport const RulesImage = styled.img`\n  width: 100%;\n  height: 100%;\n`\nexport const CloseLineButton = styled.button`\n  border: 0;\n  background-color: transparent;\n  cursor: pointer;\n  font-size: 25px;\n`\n\nexport const CloseLineContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n`\n\nexport const StyledPopup = styled(Popup)`\n  &-content {\n    width: 90% !important;\n    max-width: 620px;\n  }\n`\n","import {Component} from 'react'\nimport {RiCloseLine} from 'react-icons/ri'\nimport Buttons from '../Buttons'\nimport GameResultView from '../GameResultView'\n\nimport {\n  BgContainer,\n  MainContainer,\n  ScoreContainer,\n  ItemsContainer,\n  Heading,\n  ScoreCardContainer,\n  ParagraphScore,\n  ScoreSpan,\n  ItemsImagesContainer,\n  PopUpContainer,\n  PopUpButton,\n  RulesImageContainer,\n  RulesImage,\n  CloseLineContainer,\n  CloseLineButton,\n  StyledPopup,\n} from './styledComponents'\n\nconst resultConstants = {\n  win: 'YOU WON',\n  lose: 'YOU LOSE',\n  draw: 'IT IS DRAW',\n}\n\nclass Game extends Component {\n  state = {\n    score: 0,\n    showResult: false,\n    myChoice: {},\n    opponentChoice: {},\n    result: '',\n  }\n\n  onClickPlayAgain = () => this.setState({showResult: false})\n\n  onGetResult = () => {\n    const {myChoice, opponentChoice, result} = this.state\n    return (\n      <GameResultView\n        myChoice={myChoice}\n        opponentChoice={opponentChoice}\n        result={result}\n        playAgain={this.onClickPlayAgain}\n      />\n    )\n  }\n\n  onGetButtonId = (id, image) => {\n    const {choicesList} = this.props\n    const randomNumber = Math.floor(Math.random() * choicesList.length)\n    if (choicesList[randomNumber].id === 'ROCK' && id === 'SCISSORS') {\n      this.setState(prevState => ({\n        showResult: true,\n        myChoice: [id, image],\n        opponentChoice: choicesList[randomNumber],\n        score: prevState.score - 1,\n        result: resultConstants.lose,\n      }))\n    } else if (choicesList[randomNumber].id === 'ROCK' && id === 'PAPER') {\n      this.setState(prevState => ({\n        showResult: true,\n        myChoice: [id, image],\n        opponentChoice: choicesList[randomNumber],\n        score: prevState.score + 1,\n        result: resultConstants.win,\n      }))\n    } else if (choicesList[randomNumber].id === 'PAPER' && id === 'ROCK') {\n      this.setState(prevState => ({\n        showResult: true,\n        myChoice: [id, image],\n        opponentChoice: choicesList[randomNumber],\n        score: prevState.score - 1,\n        result: resultConstants.lose,\n      }))\n    } else if (choicesList[randomNumber].id === 'PAPER' && id === 'SCISSORS') {\n      this.setState(prevState => ({\n        showResult: true,\n        myChoice: [id, image],\n        opponentChoice: choicesList[randomNumber],\n        score: prevState.score + 1,\n        result: resultConstants.win,\n      }))\n    } else if (choicesList[randomNumber].id === 'SCISSORS' && id === 'PAPER') {\n      this.setState(prevState => ({\n        showResult: true,\n        myChoice: [id, image],\n        opponentChoice: choicesList[randomNumber],\n        score: prevState.score - 1,\n        result: resultConstants.lose,\n      }))\n    } else if (choicesList[randomNumber].id === 'SCISSORS' && id === 'ROCK') {\n      this.setState(prevState => ({\n        showResult: true,\n        myChoice: [id, image],\n        opponentChoice: choicesList[randomNumber],\n        score: prevState.score + 1,\n        result: resultConstants.win,\n      }))\n    } else {\n      this.setState({\n        showResult: true,\n        myChoice: [id, image],\n        opponentChoice: choicesList[randomNumber],\n        result: resultConstants.draw,\n      })\n    }\n  }\n\n  onGetImages = () => {\n    const {choicesList} = this.props\n    return (\n      <ItemsImagesContainer>\n        {choicesList.map(eachItem => (\n          <Buttons\n            key={eachItem.id}\n            buttonDetails={eachItem}\n            getButtonId={this.onGetButtonId}\n          />\n        ))}\n      </ItemsImagesContainer>\n    )\n  }\n\n  render() {\n    const {score, showResult} = this.state\n    return (\n      <BgContainer>\n        <MainContainer>\n          <ScoreContainer>\n            <ItemsContainer>\n              <Heading>\n                ROCK\n                <br />\n                PAPER\n                <br />\n                SCISSORS\n              </Heading>\n            </ItemsContainer>\n            <ScoreCardContainer>\n              <ParagraphScore>Score</ParagraphScore>\n              <ScoreSpan>{score}</ScoreSpan>\n            </ScoreCardContainer>\n          </ScoreContainer>\n          {showResult ? this.onGetResult() : this.onGetImages()}\n          <PopUpContainer>\n            <StyledPopup\n              modal\n              trigger={<PopUpButton type=\"button\">Rules</PopUpButton>}\n            >\n              {close => (\n                <RulesImageContainer>\n                  <CloseLineContainer>\n                    <CloseLineButton type=\"button\" onClick={() => close()}>\n                      <RiCloseLine />\n                    </CloseLineButton>\n                  </CloseLineContainer>\n                  <RulesImage\n                    src=\"https://assets.ccbp.in/frontend/react-js/rock-paper-scissor/rules-image.png\"\n                    alt=\"rules\"\n                  />\n                </RulesImageContainer>\n              )}\n            </StyledPopup>\n          </PopUpContainer>\n        </MainContainer>\n      </BgContainer>\n    )\n  }\n}\n\nexport default Game\n","import Game from './components/Game'\nimport './App.css'\n\nconst choicesList = [\n  {\n    id: 'ROCK',\n    imageUrl:\n      'https://assets.ccbp.in/frontend/react-js/rock-paper-scissor/rock-image.png',\n  },\n  {\n    id: 'SCISSORS',\n    imageUrl:\n      'https://assets.ccbp.in/frontend/react-js/rock-paper-scissor/scissor-image.png',\n  },\n  {\n    id: 'PAPER',\n    imageUrl:\n      'https://assets.ccbp.in/frontend/react-js/rock-paper-scissor/paper-image.png',\n  },\n]\n\nconst App = () => <Game choicesList={choicesList} />\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}